{"version":3,"file":"static/js/135.ff3827cd.chunk.js","mappings":"sNAAA,IAAMA,EAAU,mCAEHC,EAAc,WACzB,OAAOC,MAAM,2DAAD,OACiDF,IAE1DG,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,uBAEnB,GAEJ,EACYC,EAAkB,SAAAC,GAC7B,OAAOP,MAAM,qDAAD,OAC2CF,EAD3C,kBAC4DS,IAErEN,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,uBAEnB,GAEJ,EAEYG,EAAkB,SAAAC,GAC7B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,oBAC+CX,IACzDG,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,uBAEnB,GACF,C,6HCtCD,GAAgB,QAAU,8BAA8B,MAAQ,6B,SCkFhE,EA9EqB,WAAO,IAAD,IACjBI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAgBC,GACbR,MAAK,SAAAc,GAAI,OAAIF,EAASE,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,EAAzB,GACf,GAAE,CAACR,IAEJ,IAAMW,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,mBAEjBC,EAASd,EAAMc,OACfC,EAAcf,EAAMgB,aAE1B,OACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,QAAaC,GAAIT,EAASU,QAA3C,sBAGA,eAAIH,UAAWC,EAAAA,MAAf,4BACA,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,gBACEG,IACErB,EAAMsB,YADL,wDAEqCtB,EAAMsB,aAG9CC,IAAKvB,EAAMwB,eACXC,MAAO,OAET,4BACE,eAAGR,UAAWC,EAAAA,SAAd,2BACe,iBAAMD,UAAWC,EAAAA,KAAjB,SAA4BlB,EAAM0B,QAAc,QAE/D,4BACE,cAAGT,UAAWC,EAAAA,SAAd,2BACCH,IACC,cAAGE,UAAWC,EAAAA,KAAd,SAAyBH,EAAYY,MAAM,KAAK,QAGnDb,IACC,iCACE,eAAIG,UAAWC,EAAAA,SAAf,sBACA,wBACGJ,EAAOc,KAAI,SAAAC,GAAK,OACf,eAAIZ,UAAWC,EAAAA,KAAf,SACGW,EAAMC,MADqBD,EAAME,GADrB,gBAU3B,eAAId,UAAWC,EAAAA,SAAf,wBACA,eAAGD,UAAWC,EAAAA,KAAd,cAA0BlB,EAAMgC,aAEhC,2BACE,yBACE,SAAC,KAAD,CAAMf,UAAWC,EAAAA,KAAUC,GAAG,OAA9B,qBAIF,yBACE,SAAC,KAAD,CAAMF,UAAWC,EAAAA,KAAUC,GAAG,UAA9B,0BAKJ,SAAC,EAAAc,SAAD,WACE,SAAC,KAAD,QAIP,C","sources":["NewsApiService.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const API_KEY = 'f250076af8e178f34eb0c5b722a66f8c';\n\nexport const getTrending = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    });\n    \n}\nexport const getSearchMovies = e => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${e}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    });\n    \n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error('Response was not ok.');\n    }\n  });\n};\n\nexport const getMovieCredits = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    });\n    \n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Response was not ok.');\n      }\n    });\n    \n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__CCh0q\",\"title\":\"MovieDetails_title__cUGs9\"};","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'NewsApiService';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(data => setMovie(data))\n      .catch(error => console.log('Error', error));\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? `/movies`);\n\n  const genres = movie.genres;\n  const releaseDate = movie.release_date;\n\n  return (\n    <div className={css.section}>\n      <Link className={css.btnBack} to={backLink.current}>\n        Go back\n      </Link>\n      <h1 className={css.title}>Movie Details</h1>\n      <div className={css.movieDetails}>\n        <img\n          src={\n            movie.poster_path\n               `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n              \n          }\n          alt={movie.original_title}\n          width={300}\n        />\n        <div>\n          <p className={css.subTitle}>\n            Movie Title: <span className={css.text}>{movie.title}</span>{' '}\n          </p>\n          <div>\n            <p className={css.subTitle}>Release year:</p>\n            {releaseDate && (\n              <p className={css.text}>{releaseDate.split('-')[0]}</p>\n            )}\n          </div>\n          {genres && (\n            <>\n              <h3 className={css.subTitle}>Genres:</h3>\n              <ul>\n                {genres.map(genre => (\n                  <li className={css.text} key={genre.id}>\n                    {genre.name}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </div>\n      <h3 className={css.subTitle}>Overview:</h3>\n      <p className={css.text}> {movie.overview}</p>\n\n      <ul>\n        <li>\n          <Link className={css.item} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className={css.item} to=\"reviews\">\n            Review\n          </Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","getTrending","fetch","then","response","ok","json","Error","getSearchMovies","e","getMovieDetails","movieId","useParams","useState","movie","setMovie","useEffect","data","catch","error","console","log","location","useLocation","backLink","useRef","state","from","genres","releaseDate","release_date","className","css","to","current","src","poster_path","alt","original_title","width","title","split","map","genre","name","id","overview","Suspense"],"sourceRoot":""}